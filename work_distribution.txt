Rui:
- Caesar-cipher (priority) -errors GO,  python. pascal isn't possible (string limitation). php,rust no decode. racket wrong implementation
- Binary-search
- Factors-of-an-integer



Saraiva:
- Sorting-algorithms-Quicksort (priority)

  done: C,OCaml,Haskell,Java,Pascal,Python,Perl,Lua,Go,
        JavaScript,Rust,Racket,Erlang,Common-Lisp

- Sorting-algorithms-Merge-sort (priority)

a = quickSort(list)
  done: C,OCaml,Haskell,Java,Pascal,Python,Perl,Lua,Go,
        Rust,Racket,Erlang,Common-Lisp

- Guess-the-number
- Least-common-multiple


João Paulo:
- Towers-of-Hanoi (priority)
- Binary-digits
- Arithmetic-geometric-mean


Marco:
- Remove-duplicate-elements (priority)
- Factorial
- Sieve-of-Eratosthenes


Francisco:
- Ackermann-function (priority)
- ABC-Problem
- Greatest-element-of-a-list


Rua:
- N-queens-problem (priority) -> (improbable)
- 100-doors -> check
- Greatest-common-divisor -> check


Jácome:
- Fibonacci-sequence
* all done with recursive version using as input the number 46 (biggest Ada could handle); it doesn't need to be runned repeated time as with 46 most languages take a few seconds to conclude
* for C, C++, Chapel did my own implementation as rosetta didn't have a recursive one
* running C gives a makefile error, but running the exeuctable doesn't... can and should be used
* for Common Lisp used the makefile from the PL paper 
- Hailstone-sequence
